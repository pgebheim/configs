# Prototype
snippet module
	var ${1:name} = (function () {
		var me = {};

		${2}

		return me;
	}());

###########################
# jQuery-related
##########################

snippet $(
	$('${1}').${2}
snippet $$(
	$$('${1}').${2}
snippet $.e each
	$.each(${1}, function(${2:a}) {
		${3}
	});
snippet $.m map
	$.map(${1}, function(${2:a}) {
		${3}
	});
snippet plugin
	;(function ($) {
		$.fn.${1:class_name} = function (settings) {
			var config = {};

			if(settings) $.extend(config, settings);

			this.each(function () {
				${2}
			});

			return this;
		};
	})(jQuery);

#############################
# Functions/Clojures
#############################

# Anonymous Function
snippet fun Anon: function () {}
	function (${1:args}) {
		${2}
	}
snippet fun Anon: function () {});
	function (${1:args}) {
		${2}
	});
snippet fn Anon: function () {}
	function (${1:args}) {
		${2}
	}
# Function
snippet fun Local: var name = function () {};
	var ${1:name} = function (${2:args}) {
		${3}
	};
snippet defn Local: var name = function () {};
	var ${1:name} = function (${2:args}) {
		${3}
	};
# Object Static Method
snippet fun Member: me.name = function () {};
	${1:me}.${2:name} = function (${3:args}) {
		${4}
	};
snippet :f Member: me.name = function () {};
	${1:me}.${2:name} = function (${3:args}) {
		${4}
	};
snippet fun Member: name: function () {},
	${1:name}: function (${2:args}) {
		${3}
	};
snippet :f Member: name: function () {},
	${1:name}: function (${2:args}) {
		${3}
	},
snippet f: Member: name: function () {},
	${1:name}: function (${2:args}) {
		${3}
	},
# Prototype Method
snippet fun Member: obj.prototype.name = function () {};
	${1:object_name}.prototype.${2:name} = function (${3:args}) {
		var self = this;

		${4}
	};
snippet :f Member: obj.prototype.name = function () {};
	${1:object_name}.prototype.${2:name} = function (${3:args}) {
		var self = this;

		${4}
	};
# Execute Now
snippet fun Immediate Invocation
	(function () {
		${1}
	}());
snippet ;(f
	;(function () {
		${1}
	}());
# call/apply
snippet call
	${1:fn}.call(${2:arguments});
snippet apply
	${1:fn}.apply(${2:arguments});

#########################
# conditionals
#########################
snippet has
	if({${1:obj}.hasOwnProperty(${2:k})) {
		${3}
	}${4}
snippet null? == null
	if(${1} === null) {
		${2}
	}${3}
snippet null? != null
	if(${1} !== null) {
		${2}
	}${3}

snippet {
	{
		${1}
	}
# tertiary conditional
snippet ?
	? ${1} : ${2}

# iteration
# for (key in hash) {...}
snippet for
	for (${1:Key} in ${2:Obj}) {
		if($2.hasOwnProperty($1)) {
			${3}
		}
	}
	${4}
# each
snippet each
	each(${1:iterable},function (${2:v}) {
		${3}
	});
	${4}

snippet try
	try {
		${1}
	} catch(e){
		${2}
	}${3}

# Comments
snippet / Big
	/*
	* ${1}
	*/
